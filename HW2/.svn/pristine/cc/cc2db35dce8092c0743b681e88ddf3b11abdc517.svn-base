package edu.upenn.cis455.components;

import java.util.Vector;

public class Queue {

	private static Object lockQueue;
	
	private static Vector<String> urls;

	public Queue(){
		lockQueue = new Object();
		urls = new Vector<String>();
	}
	
	public boolean queueUrl(String url){
		synchronized(lockQueue){
			if(urls.isEmpty()){
				urls.add(url);
				notifyAll();
				return true;
			}
			urls.add(url);
			return true;
		}
	}
	
	public boolean isEmpty(){
		synchronized(lockQueue){
			if(urls.isEmpty()) return true;
			else return false;
		}
	}
	
	public String dequeueUrl(){
		try{
		synchronized(lockQueue){
			if(urls.isEmpty()) wait();
			return urls.remove(0);
		}
		}
		catch(Exception e){
			return null;
		}
	}
	
}

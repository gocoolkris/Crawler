package edu.upenn.cis455.components;

import java.util.ArrayList;
import java.util.Vector;

public class Queue {

	private static Object lockQueue;

	private static Vector<String> urls;

	public Queue(){
		lockQueue = new Object();
		urls = new Vector<String>();
	}

	public boolean enqueueUrl(String url){
		try{
			synchronized(this){
				if(urls.isEmpty()){
					urls.add(url);
					notifyAll();
					return true;
				}
				urls.add(url);
				return true;
			}
		}
		catch(Exception e){
			return false;
		}
	}

	public boolean enqueueUrlList(ArrayList<String> urlList){
		try{
			synchronized(this){
				if(urls.isEmpty()){
					for(String url : urlList) urls.add(url);
					notifyAll();
					return true;
				}
				for(String url : urlList) urls.add(url);
				return true;
			}
		}catch(Exception e){
			return false;
		}
	}



	public boolean isEmpty(){
		synchronized(this){
			if(urls.isEmpty()) return true;
			else return false;
		}
	}

	public String dequeueUrl(){
		try{
			synchronized(this){
				if(urls.isEmpty()) wait();
				return urls.remove(0);
			}
		}catch(Exception e){
			return null;
		}
		
	}

}
